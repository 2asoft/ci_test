name: ci
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-hosted-basic
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]#, macos-latest]
        include:
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: '2020.04'
            vcpkgPackages: 'sdl2:x86 openal-soft:x86'
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '2020.04'
            vcpkgPackages: 'sdl2'
          #- os: macos-latest
          #  triplet: x64-osx
          #  vcpkgCommitId: '2020.04'
          #  vcpkgPackages: 'sqlite3'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      #- name: Install dependencies
      #  run: sudo apt-get update -m && sudo apt-get install build-essentials g++-multilib gcc-multilib libsdl2-dev libopenal-dev libsdl2-2.0-0:i386 libopenal1:i386 libgl1:i386
      #  shell: bash

      - uses: lukka/get-cmake@latest

      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v3
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'

      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Prints outputs of run-vcpkg task
        run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "

      - name: Run CMake+gmake without triplet
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          cmakeGenerator: 'UnixMakefiles'
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/src/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          buildDirectory: '${{ runner.workspace }}/b/gmake/'
