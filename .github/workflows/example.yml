name: ci
on: [push]

jobs:
  ubuntu:
    name: ${{ matrix.config.name }}-hosted-basic
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu 20.04-LTS",
            os: ubuntu-20.04,
            packages: "build-essential ccache cmake g++ gcc g++-multilib gcc-multilib libsdl2-dev:i386"
            }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Install dependencies
        run: sudo dpkg --add-architecture i386 && sudo apt-get update -m && sudo apt-get install -y ${{ matrix.config.packages }}

      - name: Set up cache for ccache
        uses: actions/cache@v2
        with:
          path: ccache
          key: ${{ matrix.config.name }}-ccache-gcc-i386-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.config.name }}-ccache-gcc-i386-${{ github.ref }}-
            ${{ matrix.config.name }}-ccache-gcc-i386-

      - name: Set ccache settings
        run: |
          echo "::set-env name=CCACHE_BASEDIR::${{github.workspace}}"
          echo "::set-env name=CCACHE_DIR::${{github.workspace}}/ccache"
          echo "::set-env name=CCACHE_MAXSIZE::2G"
          echo "::set-env name=CCACHE_SLOPPINESS::time_macros"

      - name: Build
        run: |
          mkdir -p "${{github.workspace}}/build"
          cd ${{github.workspace}}/build
          cmake ../src
          make

      - name: Print ccache statistics
        run: ccache -s


  windows:
    name: ${{ matrix.config.name }}-hosted-basic
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Server 2019",
            os: windows-2019,
            vcpkg: {
              triplet: x86-windows,
              commitId: '2020.04',
              packages: "openal-soft sdl2 glew"
            }
            }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v3
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.config.vcpkg.packages }}'
          vcpkgTriplet: '${{ matrix.config.vcpkg.triplet }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.config.vcpkg.commitId }}'

      - name: Run CMake+gmake
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          useVcpkgToolchainFile: true
          cmakeGenerator: 'VS16Win32'
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/src/CMakeLists.txt'
          buildWithCMakeArgs: ''
          buildDirectory: '${{ runner.workspace }}/b/gmake/'
