# Copyright (c) 2019-2020 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
name: hosted-wasm-macos-linux
on: [push, pull_request]

jobs:
  ubuntu_native_hosted:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Replicates current local build script
      - name: install packages
        run: |
          sudo apt-get update -m && sudo apt-get install build-essential ccache cmake g++ gcc g++-multilib gcc-multilib libsdl2-dev libopenal-dev libsdl2-2.0-0:i386 libopenal1:i386 libgl1:i386
        shell: bash

      ## Install latest CMake.
      #- uses: lukka/get-cmake@latest

      ## Restore from cache the previously built ports. If "cache miss", then provision vcpkg, install desired ports, finally cache everything for the next run.
      #- name: Restore from cache and run vcpkg
      #  uses: lukka/run-vcpkg@v3
      #  with:
      #    # Response file stored in source control, it provides the list of ports and triplet(s).
      #    vcpkgArguments: '@${{ env.vcpkgResponseFile }}'
      #    # Location of the vcpkg as submodule of the repository.
      #    vcpkgDirectory: '${{ github.workspace }}/vcpkg'
      #    # Since the cache must be invalidated when content of the response file changes, let's
      #    # compute its hash and append this to the computed cache's key.
      #    appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}

      - name: 'Build with CMake and gmake'
        uses: lukka/run-cmake@v2.5
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          #??cmakeListsTxtPath: '${{ github.workspace }}/cmakesettings.json/CMakeLists.txt'
          #useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/b/gmake'
          cmakeAppendedArgs: '-G"Unix Makefiles" Multi-Config'
          # Or build multiple configurations out of a CMakeSettings.json file created with Visual Studio.
          # cmakeListsOrSettingsJson: CMakeSettingsJson
          # cmakeSettingsJsonPath: '${{ github.workspace }}/cmakesettings.json/CMakeSettings.json'
          # configurationRegexFilter: '${{ matrix.configuration }}'
